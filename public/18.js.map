{"version":3,"sources":["webpack:///./resources/js/containers/RequiredDocs/RequiredDocs.js"],"names":["TabPanel","props","children","value","index","other","component","role","hidden","id","aria-labelledby","p","a11yProps","PropTypes","isRequired","RequiredDocs","primary","secondary","newValue","classes","this","className","root","container","item","sm","xs","orientation","variant","state","onChange","tabs","label","dense","annexure","map","key","i","href","proofOfAddress","proofOfDob","proofOfIdentity","proofofEducation","Component","withStyles","theme","flexGrow","backgroundColor","display","borderRight"],"mappings":"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","file":"18.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Layout from '../../hoc/Layout/Layout'; \nimport { withStyles } from '@material-ui/core/styles'; \nimport PropTypes from 'prop-types'; \nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem'; \nimport ListItemIcon from '@material-ui/core/ListItemIcon'; \nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'; \nimport ListItemText from '@material-ui/core/ListItemText';\nimport Bookmark from '@material-ui/icons/Bookmark';\nimport Link from '@material-ui/core/Link';\n\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        <Box p={3}>{children}</Box>\n      </Typography>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n  \nfunction a11yProps(index) {\n    return {\n      id: `vertical-tab-${index}`,\n      'aria-controls': `vertical-tabpanel-${index}`,\n    };\n  }\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n      },\n      tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n      }\n});\n\nclass RequiredDocs extends Component {\n    state = {\n        value:0\n    }\n\n    annexure = () => {\n        const annexure = [\n            {\n                primary: \"Annexure C: Minor’s Application - One Parent not given consent\",\n                secondary: \"#\"\n            },\n            {\n                primary: \"Annexure D: Minors Application – Both Parents given Consent.\",\n                secondary: \"#\"\n            },\n            {\n                primary: \"Annexure F: Affidavit in case of lost/damaged passport\",\n                secondary: \"#\"\n            },\n            {\n                primary: \"Annexure G: No Objection Certificate\",\n                secondary: \"#\"\n            },\n            {\n                primary: \"Annexure H: Prior Intimation Letter\",\n                secondary: \"#\"\n            },\n            {\n                primary: \"Annexure I: Minor Child born Through Surrogacy\",\n                secondary: \"#\"\n            },\n            {\n                primary: \"Authority letter to Submit Application\",\n                secondary: \"#\"\n            }            \n        ];\n        return annexure;\n    }\n\n    proofOfAddress = () => {\n        return [\n            \"Aadhar Card\", \"Electricity Bill\", \"Telephone Bill\", \"Water Bill\", \"Spouse Passport\", \"Parents Passport\", \"Rent Agreement\", \"Bank Account Passbook\", \"Gas Connection Bill\", \"IT Assessment Order\", \"Employer Certificate\"\n        ];\n    }\n\n    proofOfDob = () => {\n        return [\n            \"Pan Card\", \"Aadhar Card\", \"Driving Licence\", \"Voter ID\", \"Birth Certificate\", \"Transfer/School Leaving Certificate\", \"Matriculation/10th/12th Certificate\", \"Service Record/Pay Pension Order\", \"Policy Bond\", \"Orphan Declaration\"\n        ];\n    }\n\n    proofOfIdentity = () => {\n        return [\n            \"Pan Card\", \"Aadhar Card\", \"Driving Licence\", \"Voter ID\"\n        ];\n    }\n\n    proofofEducation = () => {\n        return [\n            \"Matriculation Certificate\", \"10th Certificate\", \"12th Certificate\", \"Higher Educational Pass Certificate\", \n        ];\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({value: newValue});\n    };\n    \n    render() {\n        const classes = this.props.classes;\n        return (\n            <Fragment> \n                <div className={classes.root}>\n                    <Grid container>\n                        <Grid item sm={3} xs={12}>\n                            <Tabs\n                                orientation=\"vertical\"\n                                variant=\"standard\"\n                                value={this.state.value}\n                                onChange={this.handleChange} \n                                className={classes.tabs}\n                            >\n                                <Tab label=\"Annexure's\" {...a11yProps(0)} />\n                                <Tab label=\"Proof of Address\" {...a11yProps(1)} />\n                                <Tab label=\"Proof of DOB\" {...a11yProps(2)} />\n                                <Tab label=\"Proof of Identity\" {...a11yProps(3)} />\n                                <Tab label=\"Proof Education / Non-ECR\" {...a11yProps(4)} /> \n                            </Tabs>\n                        </Grid>\n                        <Grid item sm={9} xs={12}>\n                            <TabPanel value={this.state.value} index={0}>\n                                <List dense>\n                                    {\n                                        this.annexure().map((item,i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar> \n                                                    <Bookmark/> \n                                                </ListItemAvatar>\n                                                <ListItemText\n                                                    primary={item.primary}\n                                                    secondary={<Link href={item.secondary}>Downlaod</Link>}\n                                                />\n                                            </ListItem>\n                                        ))\n                                    } \n                                </List>\n                            </TabPanel>\n                            <TabPanel value={this.state.value} index={1}>\n                                <List dense>\n                                    {\n                                        this.proofOfAddress().map((item,i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar> \n                                                    <Bookmark/> \n                                                </ListItemAvatar>\n                                                <ListItemText primary={item}/>\n                                            </ListItem>\n                                        ))\n                                    } \n                                </List>\n                            </TabPanel>\n                            <TabPanel value={this.state.value} index={2}>\n                                <List dense>\n                                    {\n                                        this.proofOfDob().map((item,i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar> \n                                                    <Bookmark/> \n                                                </ListItemAvatar>\n                                                <ListItemText primary={item}/>\n                                            </ListItem>\n                                        ))\n                                    } \n                                </List>\n                            </TabPanel>\n                            <TabPanel value={this.state.value} index={3}>\n                                <List dense>\n                                    {\n                                        this.proofOfIdentity().map((item,i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar> \n                                                    <Bookmark/> \n                                                </ListItemAvatar>\n                                                <ListItemText primary={item}/>\n                                            </ListItem>\n                                        ))\n                                    } \n                                </List>\n                            </TabPanel>\n                            <TabPanel value={this.state.value} index={4}>\n                                <List dense>\n                                    {\n                                        this.proofofEducation().map((item,i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar> \n                                                    <Bookmark/> \n                                                </ListItemAvatar>\n                                                <ListItemText primary={item}/>\n                                            </ListItem>\n                                        ))\n                                    } \n                                </List>\n                            </TabPanel> \n                        </Grid>\n                    </Grid> \n                </div> \n            </Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(RequiredDocs);\n"],"sourceRoot":""}